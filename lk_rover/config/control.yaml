dump:
  left:
    min: 0.0
    max: 50000.0
    gain: 10.0
  right:
    min: 0.0
    max: 50000.0
    gain: 10.0
  diff_gain: 1.0
ladder:
  left:
    min: 0.0
    max: 1.0
    gain: 10.0
  right:
    min: 0.0
    max: 1.0
    gain: 10.0
  diff_gain: 1.0

lk_velocity_controller:
  type: "diff_drive_controller/DiffDriveController"
  left_wheel: ['base_to_left_front_wheel', 'base_to_left_back_wheel']
  right_wheel: ['base_to_right_front_wheel', 'base_to_right_back_wheel']
  publish_rate: 50
  pose_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 0.03]
  twist_covariance_diagonal: [0.001, 0.001, 0.001, 1000000.0, 1000000.0, 0.03]
  cmd_vel_timeout: 0.25

  k_l: 0.1
  k_r: 0.1

  # Odometry fused with IMU is published by robot_localization, so
  # no need to publish a TF based on encoders alone.
  enable_odom_tf: false

  # Wheel separation and radius multipliers
  wheel_separation_multiplier: 1.5 # default: 1.0
  wheel_radius_multiplier    : 1.0 # default: 1.0

  # Velocity and acceleration limits
  # Whenever a min_* is unspecified, default to -max_*
  linear:
    x:
      has_velocity_limits    : true
      max_velocity           : 2.0   # m/s
      has_acceleration_limits: true
      max_acceleration       : 20.0   # m/s^2
  angular:
    z:
      has_velocity_limits    : true
      max_velocity           : 4.0   # rad/s
      has_acceleration_limits: true
      max_acceleration       : 25.0   # rad/s^2

lk_dump_controller:
  type: "velocity_controllers/JointPositionController"
  joint: "dump"
  pid: {p: 100.0, i: 0.01, d: 10.0}

lk_ladder_controller:
  type: "velocity_controllers/JointPositionController"
  joint: "ladder"
  pid: {p: 100.0, i: 0.01, d: 10.0}

lk_spin_controller:
  type: "effort_controllers/JointEffortController"
  joint: "spin"

lk_flap_controller:
  type: "position_controllers/JointPositionController"
  joint: "flap"
